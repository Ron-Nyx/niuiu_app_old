///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of details_step;

ControllerRegistry<DetailsStepController> _$registry = ControllerRegistry<DetailsStepController>();

class $DetailsStep extends ViewWrapper {
  const $DetailsStep({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $DetailsStep.fromController(
    DetailsStepController controller, {
    bool forceAttach = false,
  }) {
    return $DetailsStep(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$DetailsStepState();
  static DetailsStepController createController({
    String? controllerId,
  }) {
    DetailsStepController controller = DetailsStepController._();
    _$registry.addController(controller, controllerId, () {});
    controller.onInit();
    return controller;
  }

  static DetailsStepController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static DetailsStepController getControllerWhere(bool Function(DetailsStepController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$DetailsStepState extends ViewWrapperState<$DetailsStep, DetailsStepController> {
  ControllerRegistry<DetailsStepController> registry = _$registry;
  View get view => DetailsStep._();
  DetailsStepController createController(String? controllerId) => $DetailsStep.createController(
        controllerId: controllerId,
      );
}

mixin _$DetailsStepControllerMixin on Controller {}
