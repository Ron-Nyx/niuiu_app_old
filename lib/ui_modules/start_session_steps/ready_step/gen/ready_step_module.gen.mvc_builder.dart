///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of ready_step;

ControllerRegistry<ReadyStepController> _$registry = ControllerRegistry<ReadyStepController>();

class $ReadyStep extends ViewWrapper {
  const $ReadyStep({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $ReadyStep.fromController(
    ReadyStepController controller, {
    bool forceAttach = false,
  }) {
    return $ReadyStep(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$ReadyStepState();
  static ReadyStepController createController({
    String? controllerId,
  }) {
    ReadyStepController controller = ReadyStepController._();
    _$registry.addController(controller, controllerId, () {});
    controller.onInit();
    return controller;
  }

  static ReadyStepController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static ReadyStepController getControllerWhere(bool Function(ReadyStepController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$ReadyStepState extends ViewWrapperState<$ReadyStep, ReadyStepController> {
  ControllerRegistry<ReadyStepController> registry = _$registry;
  View get view => ReadyStep._();
  ReadyStepController createController(String? controllerId) => $ReadyStep.createController(
        controllerId: controllerId,
      );
}

mixin _$ReadyStepControllerMixin on Controller {}
