///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of head_figure_left;

ControllerRegistry<HeadFigureLeftController> _$registry =
    ControllerRegistry<HeadFigureLeftController>();

class $HeadFigureLeft extends ViewWrapper {
  const $HeadFigureLeft({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $HeadFigureLeft.fromController(
    HeadFigureLeftController controller, {
    bool forceAttach = false,
  }) {
    return $HeadFigureLeft(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$HeadFigureLeftState();
  static HeadFigureLeftController createController({
    String? controllerId,
  }) {
    HeadFigureLeftController controller = HeadFigureLeftController._();
    _$registry.addController(controller, controllerId, () {});
    controller.onInit();
    return controller;
  }

  static HeadFigureLeftController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static HeadFigureLeftController getControllerWhere(
          bool Function(HeadFigureLeftController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$HeadFigureLeftState extends ViewWrapperState<$HeadFigureLeft, HeadFigureLeftController> {
  ControllerRegistry<HeadFigureLeftController> registry = _$registry;
  View get view => HeadFigureLeft._();
  HeadFigureLeftController createController(String? controllerId) =>
      $HeadFigureLeft.createController(
        controllerId: controllerId,
      );
}

mixin _$HeadFigureLeftControllerMixin on Controller {}
