///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of background;

ControllerRegistry<BackgroundController> _$registry = ControllerRegistry<BackgroundController>();

class $Background extends ViewWrapper {
  const $Background({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $Background.fromController(
    BackgroundController controller, {
    bool forceAttach = false,
  }) {
    return $Background(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$BackgroundState();
  static BackgroundController createController({
    String? controllerId,
  }) {
    BackgroundController controller = BackgroundController._();
    _$registry.addController(controller, controllerId, () {});
    controller.onInit();
    return controller;
  }

  static BackgroundController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static BackgroundController getControllerWhere(bool Function(BackgroundController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$BackgroundState extends ViewWrapperState<$Background, BackgroundController> {
  ControllerRegistry<BackgroundController> registry = _$registry;
  View get view => Background._();
  BackgroundController createController(String? controllerId) => $Background.createController(
        controllerId: controllerId,
      );
}

mixin _$BackgroundControllerMixin on Controller {}
