///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of start_session_modal;

ControllerRegistry<StartSessionModalController> _$registry =
    ControllerRegistry<StartSessionModalController>();

class $StartSessionModal extends ViewWrapper {
  const $StartSessionModal({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $StartSessionModal.fromController(
    StartSessionModalController controller, {
    bool forceAttach = false,
  }) {
    return $StartSessionModal(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$StartSessionModalState();
  static StartSessionModalController createController({
    String? controllerId,
  }) {
    StartSessionModalController controller = StartSessionModalController._(
      StateController<Step>(Step.DETAILS),
      StateController<bool>(true),
      StateController<bool>(false),
    );
    controller.stepStateController = StateController<Step>(Step.DETAILS);
    controller.showNextButtonStateController = StateController<bool>(true);
    controller.enableNextButtonStateController = StateController<bool>(false);
    _$registry.addController(controller, controllerId, () {
      controller.stepStateController.close();
      controller.showNextButtonStateController.close();
      controller.enableNextButtonStateController.close();
    });
    controller.onInit();
    return controller;
  }

  static StartSessionModalController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static StartSessionModalController getControllerWhere(
          bool Function(StartSessionModalController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$StartSessionModalState
    extends ViewWrapperState<$StartSessionModal, StartSessionModalController> {
  ControllerRegistry<StartSessionModalController> registry = _$registry;
  View get view => StartSessionModal._();
  StartSessionModalController createController(String? controllerId) =>
      $StartSessionModal.createController(
        controllerId: controllerId,
      );
}

mixin _$StartSessionModalControllerMixin on Controller {
  late StateController<Step> stepStateController;
  late StateController<bool> showNextButtonStateController;
  late StateController<bool> enableNextButtonStateController;
}
