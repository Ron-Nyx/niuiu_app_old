///##################################################
///#### Generated by mvcBuilder - Do Not Modify #####
///##################################################
part of bluetooth_modal;

ControllerRegistry<BluetoothModalController> _$registry =
    ControllerRegistry<BluetoothModalController>();

class $BluetoothModal extends ViewWrapper {
  const $BluetoothModal({
    String? controllerId,
    bool forceAttach = false,
  }) : super(controllerId, forceAttach);
  factory $BluetoothModal.fromController(
    BluetoothModalController controller, {
    bool forceAttach = false,
  }) {
    return $BluetoothModal(
      controllerId: controller.controllerId,
      forceAttach: forceAttach,
    );
  }
  @override
  State<StatefulWidget> createState() => _$BluetoothModalState();
  static BluetoothModalController createController({
    String? controllerId,
  }) {
    BluetoothModalController controller = BluetoothModalController._(
      StateController<String>(''),
      StateController<UnmodifiableListView<Device>>(null),
      StateController<Device?>(null),
    );
    controller.statusTextStateController = StateController<String>('');
    controller.discoveredDevicesStateController =
        StateController<UnmodifiableListView<Device>>(null);
    controller.selectedDeviceStateController = StateController<Device?>(null);
    _$registry.addController(controller, controllerId, () {
      controller.statusTextStateController.close();
      controller.discoveredDevicesStateController.close();
      controller.selectedDeviceStateController.close();
    });
    controller.onInit();
    return controller;
  }

  static BluetoothModalController getController({required String id}) =>
      _$registry.getControllerStrict(id);
  static BluetoothModalController getControllerWhere(
          bool Function(BluetoothModalController) callback) =>
      _$registry.getControllerWhereStrict(callback);
}

class _$BluetoothModalState extends ViewWrapperState<$BluetoothModal, BluetoothModalController> {
  ControllerRegistry<BluetoothModalController> registry = _$registry;
  View get view => BluetoothModal._();
  BluetoothModalController createController(String? controllerId) =>
      $BluetoothModal.createController(
        controllerId: controllerId,
      );
}

mixin _$BluetoothModalControllerMixin on Controller {
  late StateController<String> statusTextStateController;
  late StateController<UnmodifiableListView<Device>> discoveredDevicesStateController;
  late StateController<Device?> selectedDeviceStateController;
}
